/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package orchestra

import org.gradle.api.Project
import org.gradle.api.Plugin
import org.gradle.api.provider.Property

interface OrchestraPluginExtension {

    Property<String> getImage()
    Property<String> getTag()

}

class OrchestraPlugin implements Plugin<Project> {

    void apply(Project project) {
        OrchestraPluginExtension extension = project.extensions.create('orchestra', OrchestraPluginExtension)

        extension.image.convention('')
        extension.tag.convention('')

        String dockerImageAndTag = [extension.image.get(), extension.tag.get()].join(':')

        DockerPlugin.importTasks(project, this, dockerImageAndTag)
        CfnPlugin.importTasks(project, this, dockerImageAndTag)
        HelmPlugin.importTasks(project, this, dockerImageAndTag)
        GroovyPlugin.importTasks(project, this, dockerImageAndTag)
        AwsPlugin.importTasks(project, this, dockerImageAndTag)
        LambdaPlugin.importTasks(project, this, dockerImageAndTag)
        BatsPlugin.importTasks(project, this, dockerImageAndTag)
        GitPlugin.importTasks(project, this, dockerImageAndTag)
        AnsiblePlugin.importTasks(project, this, dockerImageAndTag)
        SamPlugin.importTasks(project, this, dockerImageAndTag)

        UtilFunctions.importFunctions(project, this) 

        project.task('checkTools') {
            doLast {
                String script = 'check-tools.sh'

                FileUtil.runWrapperScript(project, this, script)
            }
        }
    }

}
