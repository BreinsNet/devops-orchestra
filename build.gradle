/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/custom_plugins.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'

    // Apply the Groovy plugin to add support for Groovy
    id 'groovy'

    // Publish maven plugin
    id 'maven-publish'

    // Apply the Plugin Publish plugin to make plugin publication possible.
    id 'com.gradle.plugin-publish' version '1.1.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use Spock test framework
            useSpock('2.0-groovy-3.0')
        }

        // Create a new test suite
        functionalTest(JvmTestSuite) {
            // Use Spock test framework
            useSpock('2.0-groovy-3.0')

            targets {
                all {
                    // This test suite should run after the built-in test suite has run its tests
                    testTask.configure { shouldRunAfter(test) } 
                }
            }
        }
    }
}

gradlePlugin {
    // Define the plugin
    plugins {
        greeting {
            id = 'devops-orchestra'
            implementationClass = 'orchestra.OrchestraPlugin'
        }
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)

tasks.named('check') {
    dependsOn(testing.suites.functionalTest)
}

test.dependsOn('functionalTest')

version = '1.0'

group = 'breins.net'
